import styles from './Card.module.css';
import { Link } from 'react-router-dom';
import React, { useState ,useEffect} from 'react';

import DongD from '../../image/DongDonggae.png';
import BronzeD from '../../image/BronzeDonggae.png';
import SilverD from '../../image/SilverDonggae.png';
import GoldD from '../../image/GoldDonggae.png';
import DiamondD from '../../image/DiamondDonggae.png';

const selectImage = (condition) => {
    // Ï°∞Í±¥Ïóê Îî∞Îùº Îã§Î•∏ Ïù¥ÎØ∏ÏßÄÎ•º ÏÑ†ÌÉùÌïòÎäî Ìï®Ïàò
    if (condition === 'Îã§Ïù¥ÏïÑÎèôÍ∞ú') {
      return DiamondD;
    } 
    else if (condition === 'Ìô©Í∏àÎèôÍ∞ú') {
        return GoldD;
    } 
    else if (condition === 'ÏùÄÎèôÍ∞ú') {
        return SilverD;
    }
    else if (condition === 'ÎèôÎèôÍ∞ú') {
        return BronzeD;
    }
    else {
        return DongD;
    };

}

const TeamCard = ({ lecture, title, name, date, rank, language, recruitPostId}) => {

    const imoArray= ["‚ù§Ô∏è", `üß°`, `üíõ`, `üíö`, `üíô`, `ü©µ`, `üíú`, `ü©∑`, `ü§é`, `üñ§`, `üñ§`, `ü©∂`, `ü§ç`, `üíû`, `üíü`, `üíï`, `‚ù£Ô∏è`, `üíù`, `üíå`,`üòÄ`, `üòÅ`, `üòÉ`, `üòÑ`, `üòã`, `üòä`, `üòâ`, `üòç`, `üòò`, `ü•∞`, `üòó`, `üòô`, `ü•≤`, `ü§ó`, `üôÇ`, `‚ò∫Ô∏è`, `üòö`, `üòê`, `üòë`, `üò∂`, `ü´•`, `üòÆ`, `üòØ`, `üòù`, `üëª`, `üò∫`, `üò∏`, `üòπ`, `üòª`, `üòº`, `üòΩ`, `üê±`]
    const num = Math.round(Math.random() * 50);
    const [color, setColor] = useState('#000000');
    useEffect(() => {
        function getRandomColor(){
            return '#'+Math.floor(Math.random()*16777215).toString(16);
        }
        setColor(getRandomColor());
    }, []);

    return (
    <>
        <div className={styles.GroupCard}>
        <span className={styles.Lecture} style={{ backgroundColor: !lecture ? "black" : color }}>{lecture || "Í∞úÏù∏"}</span>
            <div className={styles.title}><Link to={`/post/${recruitPostId}`}>
                {title}</Link></div>  
                {language ? (
                    language.map((data, index) => (
                    <span key={index} className={styles.tag}>
                        {data}
                    </span>
                    ))
                ) : null}
            <div className={styles.UserName_}>{name}<img className={styles.image} src={selectImage(rank)} alt="Image" /></div>
            <div className={styles.UserCateInfo}>{date}</div>
        </div>
    </>
    );
};

export default TeamCard;